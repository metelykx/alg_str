#include <iostream> 
#include <vector> 

// Решение системы линейных уравнений методом Гаусса-Зайделя 
void gaussSeidel(std::vector<std::vector<double>>& A, std::vector<double>& b, int maxIterations, double tolerance) { 
    int n = A.size(); //вычисение размера вектора 
    std::vector<double> x(n, 0.0); // Начальное приближение 

    for (int iter = 0; iter < maxIterations; ++iter) { 
        std::vector<double> newX(n); //инициализируется новый вектор размера n;

        for (int i = 0; i < n; ++i) { 
            double sum = b[i]; //присваивание правой части переменной сумме
            //затем происходит цикл по всем перемнным j, кроме текущей j!+i, чтобы вычесть их вклад в сумму
            for (int j = 0; j < n; ++j) { 
                if (j != i) { 
                    //вычитается произведение коэффициента A[i][j] на соответствующее значение переменной x[j]
                    sum -= A[i][j] * x[j]; 
                } 
            } 
            //Полученная сумма делится на коэффициент при переменной x[i] (A[i][i]), чтобы найти новое значение переменной x[i].
            newX[i] = sum / A[i][i]; 
            //Новое значение переменной x[i] сохраняется в векторе newX.
            //После завершения цикла по всем переменным системы вектор newX будет содержать новые значения всех переменных на текущей итерации.
        } 
        //Переменная error инициализируется нулем и используется для вычисления суммарной ошибки между предыдущими значениями переменных x и новыми значениями переменных newX.
        double error = 0.0; 
        for (int i = 0; i < n; ++i) { 
            //вычисляет абсолютное значение разницы между предыдущим значением x[i] и новым значением newX[i], добавляя это значение к общей ошибке error.
            error += std::abs(newX[i] - x[i]); 
            //Новые значения переменных newX заменяют предыдущие значения переменных x.
            x[i] = newX[i]; 
        } 
        //После вычисления ошибки для всех переменных происходит проверка: если суммарная ошибка error меньше заданного порога сходимости tolerance, то выводится сообщение о достижении сходимости после определенного числа итераций iter + 1, где iter — текущий номер итерации, и цикл прерывается.
        if (error < tolerance) { 
            std::cout << "Сходимость достигнута после " << iter + 1 << " итераций." << std::endl; 
            break; 
        } 
    } 
    //цикл по выведению значений системы
    std::cout << "Решение системы:" << std::endl; 
    for (int i = 0; i < n; ++i) { 
        std::cout << "x" << i + 1 << " = " << x[i] << std::endl; 
    } 
} 

int main() { 
    //Система уравнений  
    std::vector<std::vector<double>> A = { 
        {4, 1, -1}, 
        {2, 3, 0}, 
        {1, -1, 5} 
    }; 
    //система 
    std::vector<double> b = { 7, 7, -11 }; 
    int maxIterations = 1000; // Максимальное количество итераций 
    double tolerance = 0.001; // Порог сходимости 
    //вызов функции 
    gaussSeidel(A, b, maxIterations, tolerance); 

}